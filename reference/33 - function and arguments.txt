How to pass parameters to the function


Function arguments'


def update(x):
	x = 8
	print(x)

update(10)




def update(x):
	x = 8
	print("x", x)

a = 10
update(a)
print("a",a)

Pass By Value 
Pass By Reference


Pass By Value

a = 10
update(a)
print("a",a)


Passing a value and not the address


Pass By Reference
Passing the address of a which means when we change the value of x
it also changes


print(id(a))
print(id(x))

They are still referring to the same object

Python does not have pass by value or pass by reference

When we change the value we change the address

Whenever we call a function by passing a value they will share the same 
id but the moment we change the value it changes the address
Python does not use both pass by value and pass by  reference

Integers and strings are immutable



TYPES OF ARGUMENTS

def add(a, b):     #defining arguments are formal arguments
	c = a + b
	print(c)

add(5, 6)  --- this are called arugments (5, 6) or actual arguments'




Two Types of Arguments
FORMAL ARGUMENTS _ WHICH ARE DEFINING
ACTUAL ARGUMENTS THAT WE ARE PASSING WHEN WE ARE CALLING THE FUNCTION

ACTUAL ARGUMENTS ARE:
1. Position
2. Keyword
3. Default 
4. Variable Length 


DEFAULT ARGUMENTS'

where we are expecting two variables but we are 
passing only one

mention in the formal argument itself


VARIABLE LENGTH ARGUMENTS

def sum(a, *b):   * --> means (b) it can have multiple values	
	c = a +b
	print(a)  ------ a is integer
	print(b)   ---- b is a tuple

sum(5, 6, 34 , 78)


def sum(a, *b):
	c = a
	for i in b:
	 c = c + i

	print(c)

sum(5, 6, 34, 78)
